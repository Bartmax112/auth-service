version: '2.4'
services:
  client-system:
    image: client-app
    container_name: client-app
    depends_on:
      banking-db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://banking-db:5432/
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    ports:
      - 8081:8081
    restart: on-failure

  client-db:
    image: postgres
    container_name: client-db
    ports:
      - 11222:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-server:
    container_name: redisDb
    image: 'redis'
    ports:
      - 6379:6379

  auth-system:
    image: auth-system
    container_name: auth-system
    hostname: redis
    ports:
      - 8082:8082
    depends_on:
      auth-db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://auth-db:5432/
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_RABBITMQ_HOST=rabbitmq

  rabbitmq:
    image: rabbitmq
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672

  auth-db:
    image: postgres
    container_name: auth-db
    ports:
      - 11223:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5